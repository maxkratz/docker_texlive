kind: pipeline
name: default

.env: &env
  environment:
    USERNAME:
      from_secret: dockerhub_username
    PASSWORD:
      from_secret: dockerhub_password
    REPO: maxkratz/texlive

.dockervolume: &dockervolume
  volumes:
    - name: dockersock
      path: /var/run

.sleep: &sleep
  sleep 5 # wait a bit for Docker to start

.login: &login
  docker login -u $USERNAME -p $PASSWORD

.setup: &setup
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && \
  docker buildx create --name builder --driver docker-container --use && \
  docker buildx inspect --bootstrap
# ^normally, one would use a syntax like this:
#.setup: &setup
#  - docker ..
#  - docker ..
# BUT: The YAML parser of drone does not allow it and returns an error:
# > cannot unmarshal !!seq into string
# Therefore, the setup block uses && to run all three docker comands as one single string.

#steps:
#  - name: build-base
#    image: plugins/docker
#    settings:
#        dockerfile: Dockerfile
#        <<: *repo
#        tags:
#            - base
#        <<: *auth
#    when:
#        branch:
#            - main
#            - base

steps:
  - name: build-base
    image: maniator/dind-buildx
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
    #   - *setup
      - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && docker buildx create --name builder --driver docker-container --use && docker buildx inspect --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:base --push .

services:
  - name: docker
    image: docker:dind
    privileged: true
    <<: *dockervolume

volumes:
  - name: dockersock
    temp: {}
