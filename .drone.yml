kind: pipeline
name: default

#
# Global definitions
#

# This CI uses a fork of docker/dind which also provides buildx support.
.buildimage: &buildimage
  image: maniator/dind-buildx

# Environment setup.
.env: &env
  environment:
    USERNAME:
      from_secret: dockerhub_username
    PASSWORD:
      from_secret: dockerhub_password
    REPO: maxkratz/texlive

# Define a temporary volue for communicating with the dind service.
.dockervolume: &dockervolume
  volumes:
    - name: dockersock
      path: /var/run

# Wait a bit for dind to start
.sleep: &sleep
  sleep 5

# Login to dockerhub.
.login: &login
  docker login -u $USERNAME -p $PASSWORD

# Setup the buildx builder.
.setup: &setup
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && docker buildx create --name builder --driver docker-container --use && docker buildx inspect --bootstrap
# ^normally, one would use a syntax like this:
#.setup: &setup
#  - docker ..
#  - docker ..
# BUT: The YAML parser of drone does not allow it and returns an error:
# > cannot unmarshal !!seq into string
# Therefore, the setup block uses && to run all three docker comands as one single string.
#
# Additionally, this command breaks if some newlines `\` are included.

# Only build and push images if commit is on the branch `main`.
.ismain: &ismain
  when:
    branch:
      include:
        - main

# Only build(-only) images if commit is NOT on the branch `main`.
.isnotmain: &isnotmain
  when:
    branch:
      exclude:
        - main

#
# Build jobs
#
steps:
  # Build base image without pushing it.
  - name: build-base
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:base .
    <<: *isnotmain

  # Build 2022 image without pushing it.
  - name: build-2022
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2022 . -f ./2022/Dockerfile
    <<: *isnotmain
    depends_on:
      - build-base

  # Build and push base image.
  - name: build-and-push-base
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:base --push .
    <<: *ismain

  # All further jops are for building and pushing the individual images.

  - name: build-and-push-2022
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2022 -t $REPO:latest --push . -f ./2022/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2021
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2021 --push . -f ./2021/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2020
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2020 --push . -f ./2020/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2019
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2019 --push . -f ./2019/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2018
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2018 --push . -f ./2018/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2017
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $REPO:2017 --push . -f ./2017/Dockerfile
    <<: *ismain
    depends_on:
      - build-and-push-base

  - name: build-and-push-2016
    <<: *buildimage
    <<: *dockervolume
    <<: *env
    commands:
      - *sleep
      - *login
      - *setup
      - docker buildx build --platform linux/amd64,linux/arm/v7 -t $REPO:2016 --push . -f ./2016/Dockerfile
      # ^arm64 does not work on texlive 2016 -> removed from this build command
    <<: *ismain
    depends_on:
      - build-and-push-base

#
# Dind service for building Docker images.
#
services:
  - name: docker
    image: docker:dind
    privileged: true
    <<: *dockervolume

# The temporary volume for the dockersocket.
volumes:
  - name: dockersock
    temp: {}
